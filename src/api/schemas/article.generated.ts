/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/v4/articles/count": {
    get: {
      parameters: {};
      responses: {
        /** response */
        200: {
          content: {
            "application/json": {
              count?: number;
            };
          };
        };
        /** Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** Not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** unexpected error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/v4/articles": {
    get: {
      parameters: {
        query: {
          /** Maximum number of results possible */
          limit?: number;
          /** Sort according to a specific field. */
          _sort?: string;
          /** Skip a specific number of entries (especially useful for pagination) */
          _start?: number;
          /** Get entries that matches exactly your input */
          "="?: string;
          /** Get records that are not equals to something */
          _ne?: string;
          /** Get record that are lower than a value */
          _lt?: string;
          /** Get records that are lower than or equal to a value */
          _lte?: string;
          /** Get records that are greater than a value */
          _gt?: string;
          /** Get records that are greater than  or equal a value */
          _gte?: string;
          /** Get records that contains a value */
          _contains?: string;
          /** Get records that contains (case sensitive) a value */
          _containss?: string;
          /** Get records that matches any value in the array of values */
          _in?: string[];
          /** Get records that doesn't match any value in the array of values */
          _nin?: string[];
        };
      };
      responses: {
        /** response */
        200: {
          content: {
            "application/json": components["schemas"]["Articles"];
          };
        };
        /** Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** Not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** unexpected error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/v4/articles/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** response */
        200: {
          content: {
            "application/json": components["schemas"]["Article"];
          };
        };
        /** Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** Not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** unexpected error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/v4/articles/launch/{id}": {
    /** Get all articles linked to a launch */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** response */
        200: {
          content: {
            "application/json": {
              foo?: string;
            };
          };
        };
        /** Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** Not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** unexpected error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/v4/articles/event/{id}": {
    /** Get all articles linked to an event */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** response */
        200: {
          content: {
            "application/json": {
              foo?: string;
            };
          };
        };
        /** Forbidden */
        403: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** Not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** unexpected error */
        default: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    Articles: {
      count: number;
      next: string;
      previous: string;
      results: components["schemas"]["Article"][];
    };
    Article: {
      id: string;
      title: string;
      /** @default false */
      featured?: boolean;
      url: string;
      image_url: string;
      summary?: string;
      /** Format: date-time */
      published_at: string;
      newsSite: {
        id: string;
        name: string;
        articles?: string[];
        blogs?: string[];
        reports?: string[];
        created_by?: string;
        updated_by?: string;
      };
      launches?: {
        id: string;
        launchId: string;
        name: string;
        articles?: string[];
        blogs?: string[];
        provider: string;
        created_by?: string;
        updated_by?: string;
      }[];
      events?: {
        id: string;
        name: string;
        eventId: number;
        articles?: string[];
        blogs?: string[];
        provider: string;
        created_by?: string;
        updated_by?: string;
      }[];
    };
    NewArticle: {
      title: string;
      /** @default false */
      featured?: boolean;
      url: string;
      image_url: string;
      summary?: string;
      /** Format: date-time */
      published_at: string;
      newsSite: string;
      launches?: string[];
      events?: string[];
      created_by?: string;
      updated_by?: string;
    };
    Error: unknown;
  };
}

export interface operations {}

export interface external {}
